# Production Dockerfile with separate build and deploy images.

# Runtime requires card images provided in the image generated by
# Dockerfile.cards to be served at /img/cards/.

FROM clojure:latest AS builder

WORKDIR /app

# Install Node.js
ENV NODE_VERSION=19.6.0
RUN apt update && apt install -y curl
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
ENV NVM_DIR=/root/.nvm
RUN . "$NVM_DIR/nvm.sh" && nvm install ${NODE_VERSION}
RUN . "$NVM_DIR/nvm.sh" && nvm use v${NODE_VERSION}
RUN . "$NVM_DIR/nvm.sh" && nvm alias default v${NODE_VERSION}
ENV PATH="/root/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}"

# Copy project files
COPY . .

# Install dependencies
RUN npm ci
RUN lein deps

# Compile CSS
RUN npm run css:release

# Compile ClojureScript
RUN npm run cljs:release

# Build the application
RUN lein uberjar

# Create a smaller runtime image
FROM openjdk:11-jre-slim

WORKDIR /app

# Copy the built artifact from the builder stage
COPY --from=builder /app/target/netrunner-standalone.jar .

# Set the startup command. Custom config with 'prod.edn' can
# be mapped as a volume at runtime to '/app/config/prod.edn'.
CMD ["java", "-cp", "/app/netrunner-standalone.jar:/app/config", "web.core"]

# Expose port to nginx-proxy
EXPOSE 1042
